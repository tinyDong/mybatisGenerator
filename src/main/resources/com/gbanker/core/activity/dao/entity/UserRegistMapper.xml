<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gbanker.core.activity.dao.mapper.UserRegistMapper" >
  <resultMap id="BaseResultMap" type="com.gbanker.core.activity.dao.entity.UserRegist" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="wx_open_id" property="wxOpenId" jdbcType="VARCHAR" />
    <result column="alipay_open_id" property="alipayOpenId" jdbcType="VARCHAR" />
    <result column="qq_number" property="qqNumber" jdbcType="VARCHAR" />
    <result column="column_1" property="column1" jdbcType="VARCHAR" />
    <result column="column_2" property="column2" jdbcType="VARCHAR" />
    <result column="column_3" property="column3" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, user_id, user_name, email, wx_open_id, alipay_open_id, qq_number, column_1, column_2, 
    column_3
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from user_regist
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from user_regist
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.gbanker.core.activity.dao.entity.UserRegist" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into user_regist (id, user_id, user_name, 
      email, wx_open_id, alipay_open_id, 
      qq_number, column_1, column_2, 
      column_3)
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{wxOpenId,jdbcType=VARCHAR}, #{alipayOpenId,jdbcType=VARCHAR}, 
      #{qqNumber,jdbcType=VARCHAR}, #{column1,jdbcType=VARCHAR}, #{column2,jdbcType=VARCHAR}, 
      #{column3,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.gbanker.core.activity.dao.entity.UserRegist" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into user_regist
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="wxOpenId != null" >
        wx_open_id,
      </if>
      <if test="alipayOpenId != null" >
        alipay_open_id,
      </if>
      <if test="qqNumber != null" >
        qq_number,
      </if>
      <if test="column1 != null" >
        column_1,
      </if>
      <if test="column2 != null" >
        column_2,
      </if>
      <if test="column3 != null" >
        column_3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="wxOpenId != null" >
        #{wxOpenId,jdbcType=VARCHAR},
      </if>
      <if test="alipayOpenId != null" >
        #{alipayOpenId,jdbcType=VARCHAR},
      </if>
      <if test="qqNumber != null" >
        #{qqNumber,jdbcType=VARCHAR},
      </if>
      <if test="column1 != null" >
        #{column1,jdbcType=VARCHAR},
      </if>
      <if test="column2 != null" >
        #{column2,jdbcType=VARCHAR},
      </if>
      <if test="column3 != null" >
        #{column3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.gbanker.core.activity.dao.entity.UserRegist" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user_regist
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="wxOpenId != null" >
        wx_open_id = #{wxOpenId,jdbcType=VARCHAR},
      </if>
      <if test="alipayOpenId != null" >
        alipay_open_id = #{alipayOpenId,jdbcType=VARCHAR},
      </if>
      <if test="qqNumber != null" >
        qq_number = #{qqNumber,jdbcType=VARCHAR},
      </if>
      <if test="column1 != null" >
        column_1 = #{column1,jdbcType=VARCHAR},
      </if>
      <if test="column2 != null" >
        column_2 = #{column2,jdbcType=VARCHAR},
      </if>
      <if test="column3 != null" >
        column_3 = #{column3,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gbanker.core.activity.dao.entity.UserRegist" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user_regist
    set user_id = #{userId,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      wx_open_id = #{wxOpenId,jdbcType=VARCHAR},
      alipay_open_id = #{alipayOpenId,jdbcType=VARCHAR},
      qq_number = #{qqNumber,jdbcType=VARCHAR},
      column_1 = #{column1,jdbcType=VARCHAR},
      column_2 = #{column2,jdbcType=VARCHAR},
      column_3 = #{column3,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>